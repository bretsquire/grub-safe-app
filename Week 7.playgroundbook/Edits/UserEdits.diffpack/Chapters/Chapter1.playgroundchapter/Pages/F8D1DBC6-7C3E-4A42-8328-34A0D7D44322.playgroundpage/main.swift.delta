<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation
import Combine
import SwiftUI
import PlaygroundSupport

PlaygroundPage.current.needsIndefiniteExecution = true

class ImageLoader: ObservableObject {
    var didChange = PassthroughSubject&lt;Data, Never&gt;()
    var data = Data() {
        didSet {
            didChange.send(data)
        }
    }
    
    // The code below downloads an image from the popular blog Swift by Sundell
    // Using DispatchQueue.
    // Your task is to modify the code to use OperationQueue.
    
    init(urlString:String) {
        guard let url = URL(string: urlString) else { return }
        let task = URLSession.shared.dataTask(with: url) { data, response, error in
            guard let data = data else { return }
            print("Image data Downloaded \(data)")
            
            //........................................//
            DispatchQueue.main.async {
                print(Thread.isMainThread ? "Execution on Main Thread" : "Execution on other Thread" )
                self.data = data
            }
            //........................................//
        }
        
        task.resume()
    }
}

struct ImageView: View {
    @ObservedObject var imageLoader:ImageLoader
    @State var image:UIImage = UIImage()
    
    init(withURL url:String) {
        imageLoader = ImageLoader(urlString:url)
    }
    
    var body: some View {
        ZStack {
            Color.orange
                .ignoresSafeArea()
            VStack {
                Text("Hello Crusty!")
                    .font(.system(size: 36, weight: .heavy, design: .rounded))
                Image(uiImage: image)
                    .resizable()
                    .aspectRatio(contentMode: .fit)
                    .frame(width:200, height:200)
                    .onReceive(imageLoader.didChange) { data in
                        self.image = UIImage(data: data) ?? UIImage()
                    }
            }
        }
    }
}

let view = ImageView(withURL: "https://www.swiftbysundell.com/images/discover/swiftui/icon.png")

PlaygroundPage.current.setLiveView(view)
</string>
			<key>ModifiedRange</key>
			<string>{0, 2087}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
